<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="486" onload="init(evt)" viewBox="0 0 1200 486" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;
		if (currentSearchTerm === null) return;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="486.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="469" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="469" > </text>
<g id="frames">
<g >
<title>timekeeping_update (90,938,743 samples, 0.02%)</title><rect x="357.9" y="213" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="360.87" y="223.5" ></text>
</g>
<g >
<title>task_tick_mm_cid (123,344,464 samples, 0.03%)</title><rect x="900.6" y="245" width="0.3" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="903.61" y="255.5" ></text>
</g>
<g >
<title>x86_pmu_disable (77,452,840 samples, 0.02%)</title><rect x="892.7" y="213" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="895.67" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle (2,871,749,331 samples, 0.59%)</title><rect x="1133.8" y="277" width="7.0" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1136.76" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_read (163,802,390 samples, 0.03%)</title><rect x="10.2" y="293" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="13.17" y="303.5" ></text>
</g>
<g >
<title>cpufreq_this_cpu_can_update (57,588,975 samples, 0.01%)</title><rect x="254.4" y="197" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="257.44" y="207.5" ></text>
</g>
<g >
<title>get_next_freq.constprop.0 (77,723,286 samples, 0.02%)</title><rect x="897.3" y="197" width="0.2" height="15.0" fill="rgb(239,158,37)" rx="2" ry="2" />
<text  x="900.33" y="207.5" ></text>
</g>
<g >
<title>hrtimer_update_next_event (74,571,496 samples, 0.02%)</title><rect x="901.5" y="309" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="904.53" y="319.5" ></text>
</g>
<g >
<title>expf@plt (62,202,123 samples, 0.01%)</title><rect x="1188.5" y="405" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1191.49" y="415.5" ></text>
</g>
<g >
<title>pvclock_gtod_notify (96,216,937 samples, 0.02%)</title><rect x="886.6" y="181" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="889.56" y="191.5" ></text>
</g>
<g >
<title>clockevents_program_event (95,581,956 samples, 0.02%)</title><rect x="902.1" y="293" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="905.10" y="303.5" ></text>
</g>
<g >
<title>rb_next (81,277,919 samples, 0.02%)</title><rect x="883.6" y="277" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="886.58" y="287.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (701,405,176 samples, 0.14%)</title><rect x="885.6" y="261" width="1.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="888.59" y="271.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (442,959,723 samples, 0.09%)</title><rect x="883.8" y="293" width="1.1" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="886.79" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,402,243,703 samples, 1.32%)</title><rect x="1165.5" y="373" width="15.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1168.50" y="383.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;float  (101,585,658 samples, 0.02%)</title><rect x="1182.0" y="389" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1184.99" y="399.5" ></text>
</g>
<g >
<title>__blk_flush_plug (46,271,611 samples, 0.01%)</title><rect x="10.3" y="85" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="13.32" y="95.5" ></text>
</g>
<g >
<title>update_curr_se (91,386,025 samples, 0.02%)</title><rect x="895.1" y="197" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="898.10" y="207.5" ></text>
</g>
<g >
<title>Layer::feed_forward (633,918,074 samples, 0.13%)</title><rect x="1143.8" y="389" width="1.5" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1146.76" y="399.5" ></text>
</g>
<g >
<title>__update_load_avg_se (78,995,925 samples, 0.02%)</title><rect x="254.3" y="197" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="257.25" y="207.5" ></text>
</g>
<g >
<title>irqentry_exit (113,208,377 samples, 0.02%)</title><rect x="1142.0" y="341" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1144.96" y="351.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (263,887,887 samples, 0.05%)</title><rect x="1147.7" y="373" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1150.67" y="383.5" ></text>
</g>
<g >
<title>__irqentry_text_start (45,075,819 samples, 0.01%)</title><rect x="1165.3" y="373" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="1168.30" y="383.5" ></text>
</g>
<g >
<title>update_wall_time (135,019,989 samples, 0.03%)</title><rect x="357.8" y="245" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="360.78" y="255.5" ></text>
</g>
<g >
<title>Layer::Layer (188,489,159 samples, 0.04%)</title><rect x="14.6" y="405" width="0.5" height="15.0" fill="rgb(238,151,36)" rx="2" ry="2" />
<text  x="17.63" y="415.5" ></text>
</g>
<g >
<title>acct_account_cputime (87,984,838 samples, 0.02%)</title><rect x="888.7" y="213" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="891.70" y="223.5" ></text>
</g>
<g >
<title>do_sys_openat2 (42,136,139 samples, 0.01%)</title><rect x="28.9" y="213" width="0.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="31.88" y="223.5" ></text>
</g>
<g >
<title>update_load_avg (243,406,726 samples, 0.05%)</title><rect x="359.7" y="213" width="0.6" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="362.67" y="223.5" ></text>
</g>
<g >
<title>ondemand_readahead (119,472,853 samples, 0.02%)</title><rect x="10.3" y="165" width="0.3" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.27" y="175.5" ></text>
</g>
<g >
<title>page_cache_ra_order (118,245,532 samples, 0.02%)</title><rect x="10.3" y="149" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.27" y="159.5" ></text>
</g>
<g >
<title>irqentry_exit (74,819,334 samples, 0.02%)</title><rect x="256.9" y="341" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="259.92" y="351.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (70,169,677 samples, 0.01%)</title><rect x="1187.3" y="357" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1190.27" y="367.5" ></text>
</g>
<g >
<title>update_wall_time (622,299,126 samples, 0.13%)</title><rect x="885.8" y="245" width="1.5" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="888.79" y="255.5" ></text>
</g>
<g >
<title>page_cache_ra_unbounded (116,999,197 samples, 0.02%)</title><rect x="10.3" y="133" width="0.3" height="15.0" fill="rgb(234,134,32)" rx="2" ry="2" />
<text  x="13.28" y="143.5" ></text>
</g>
<g >
<title>rcu_pending (60,237,478 samples, 0.01%)</title><rect x="251.6" y="229" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="254.57" y="239.5" ></text>
</g>
<g >
<title>update_vsyscall (55,047,778 samples, 0.01%)</title><rect x="250.0" y="197" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="252.99" y="207.5" ></text>
</g>
<g >
<title>update_curr (617,036,275 samples, 0.13%)</title><rect x="893.9" y="213" width="1.5" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="896.85" y="223.5" ></text>
</g>
<g >
<title>sugov_update_single_freq (275,948,195 samples, 0.06%)</title><rect x="897.7" y="197" width="0.6" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="900.66" y="207.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (3,439,903,083 samples, 0.71%)</title><rect x="1132.4" y="293" width="8.4" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1135.42" y="303.5" ></text>
</g>
<g >
<title>effective_cpu_util (53,767,180 samples, 0.01%)</title><rect x="898.2" y="165" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="901.19" y="175.5" ></text>
</g>
<g >
<title>sugov_update_single_freq (52,595,674 samples, 0.01%)</title><rect x="360.1" y="197" width="0.2" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="363.12" y="207.5" ></text>
</g>
<g >
<title>_int_malloc (326,900,016 samples, 0.07%)</title><rect x="21.4" y="373" width="0.8" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="24.38" y="383.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (153,925,196 samples, 0.03%)</title><rect x="357.7" y="261" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="360.73" y="271.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (413,023,094 samples, 0.09%)</title><rect x="1132.7" y="261" width="1.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1135.75" y="271.5" ></text>
</g>
<g >
<title>rcu_pending (47,512,687 samples, 0.01%)</title><rect x="1135.3" y="229" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1138.31" y="239.5" ></text>
</g>
<g >
<title>nohz_balance_exit_idle (48,193,831 samples, 0.01%)</title><rect x="899.2" y="197" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="902.18" y="207.5" ></text>
</g>
<g >
<title>clockevents_program_event (43,851,091 samples, 0.01%)</title><rect x="1141.3" y="293" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="1144.33" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (3,838,763,912 samples, 0.79%)</title><rect x="247.8" y="357" width="9.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="250.80" y="367.5" ></text>
</g>
<g >
<title>Eigen::internal::gemm_pack_lhs&lt;float, long, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 8, 4, float __vector (185,888,891 samples, 0.04%)</title><rect x="10.6" y="405" width="0.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="13.59" y="415.5" ></text>
</g>
<g >
<title>read_pages (99,081,844 samples, 0.02%)</title><rect x="10.3" y="117" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="13.32" y="127.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (242,635,575 samples, 0.05%)</title><rect x="20.6" y="389" width="0.6" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="23.60" y="399.5" ></text>
</g>
<g >
<title>__memset_sse2_unaligned_erms (274,835,165 samples, 0.06%)</title><rect x="1187.6" y="405" width="0.7" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1190.63" y="415.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (2,931,910,342 samples, 0.60%)</title><rect x="248.9" y="293" width="7.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="251.86" y="303.5" ></text>
</g>
<g >
<title>void Eigen::internal::gemv_dense_selector&lt;2, 0, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; const&gt;, Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, 1, -1, false&gt; const&gt;, Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 1, -1, false&gt; &gt; &gt; (158,135,196 samples, 0.03%)</title><rect x="15.5" y="373" width="0.4" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="18.48" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (168,463,968 samples, 0.03%)</title><rect x="10.2" y="341" width="0.4" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.16" y="351.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (6,613,648,055 samples, 1.36%)</title><rect x="885.0" y="293" width="16.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="888.01" y="303.5" ></text>
</g>
<g >
<title>irq_exit_rcu (56,188,759 samples, 0.01%)</title><rect x="882.2" y="357" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="885.22" y="367.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (54,150,541 samples, 0.01%)</title><rect x="903.5" y="325" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="906.51" y="335.5" ></text>
</g>
<g >
<title>malloc (131,313,435 samples, 0.03%)</title><rect x="1142.8" y="373" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1145.82" y="383.5" ></text>
</g>
<g >
<title>scheduler_tick (2,016,955,645 samples, 0.42%)</title><rect x="1135.6" y="245" width="4.9" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1138.60" y="255.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, 0, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, false, 0&gt;::run (42,760,443,337 samples, 8.82%)</title><rect x="257.3" y="389" width="104.1" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="260.34" y="399.5" >Eigen::inter..</text>
</g>
<g >
<title>__irq_exit_rcu (72,867,094 samples, 0.02%)</title><rect x="256.7" y="325" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="259.69" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (79,978,211 samples, 0.02%)</title><rect x="1187.3" y="389" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1190.26" y="399.5" ></text>
</g>
<g >
<title>update_fast_timekeeper (63,601,489 samples, 0.01%)</title><rect x="886.8" y="197" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="889.79" y="207.5" ></text>
</g>
<g >
<title>tick_sched_handle (2,361,770,699 samples, 0.49%)</title><rect x="250.2" y="277" width="5.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="253.21" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (4,307,311,642 samples, 0.89%)</title><rect x="1131.1" y="341" width="10.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1134.11" y="351.5" ></text>
</g>
<g >
<title>scheduler_tick (4,131,059,874 samples, 0.85%)</title><rect x="890.5" y="245" width="10.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="893.47" y="255.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime_field (163,648,441 samples, 0.03%)</title><rect x="888.3" y="213" width="0.4" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="891.31" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (70,755,805 samples, 0.01%)</title><rect x="20.4" y="357" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="23.42" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (68,632,013 samples, 0.01%)</title><rect x="1187.3" y="341" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1190.27" y="351.5" ></text>
</g>
<g >
<title>filemap_get_pages (151,737,612 samples, 0.03%)</title><rect x="10.2" y="197" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="13.19" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (7,531,755,196 samples, 1.55%)</title><rect x="883.0" y="309" width="18.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="885.98" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (248,113,849 samples, 0.05%)</title><rect x="1180.3" y="293" width="0.6" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1183.34" y="303.5" ></text>
</g>
<g >
<title>timekeeping_advance (119,813,856 samples, 0.02%)</title><rect x="357.8" y="229" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="360.81" y="239.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (231,661,254 samples, 0.05%)</title><rect x="889.7" y="245" width="0.6" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="892.72" y="255.5" ></text>
</g>
<g >
<title>__remove_hrtimer (83,116,653 samples, 0.02%)</title><rect x="248.3" y="293" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="251.30" y="303.5" ></text>
</g>
<g >
<title>pvclock_gtod_notify (63,966,295 samples, 0.01%)</title><rect x="249.8" y="181" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="252.75" y="191.5" ></text>
</g>
<g >
<title>cpuacct_account_field (124,686,078 samples, 0.03%)</title><rect x="889.0" y="213" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="891.96" y="223.5" ></text>
</g>
<g >
<title>account_user_time (313,650,176 samples, 0.06%)</title><rect x="1134.1" y="229" width="0.8" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="1137.12" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (8,264,451,416 samples, 1.70%)</title><rect x="882.5" y="341" width="20.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="885.51" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (8,932,705,447 samples, 1.84%)</title><rect x="882.4" y="357" width="21.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="885.41" y="367.5" >s..</text>
</g>
<g >
<title>main (484,794,685,671 samples, 100.00%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="13.00" y="431.5" >main</text>
</g>
<g >
<title>_int_malloc (41,654,601 samples, 0.01%)</title><rect x="20.3" y="389" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="23.31" y="399.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (456,165,327 samples, 0.09%)</title><rect x="1132.7" y="277" width="1.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1135.65" y="287.5" ></text>
</g>
<g >
<title>generic_file_read_iter (160,018,882 samples, 0.03%)</title><rect x="10.2" y="229" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="13.18" y="239.5" ></text>
</g>
<g >
<title>ktime_get (74,427,946 samples, 0.02%)</title><rect x="885.1" y="277" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="888.08" y="287.5" ></text>
</g>
<g >
<title>irq_exit_rcu (262,562,415 samples, 0.05%)</title><rect x="902.7" y="341" width="0.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="905.72" y="351.5" ></text>
</g>
<g >
<title>__libc_calloc (306,384,106 samples, 0.06%)</title><rect x="19.5" y="389" width="0.8" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="22.53" y="399.5" ></text>
</g>
<g >
<title>update_process_times (2,764,046,196 samples, 0.57%)</title><rect x="1134.0" y="261" width="6.8" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1137.03" y="271.5" ></text>
</g>
<g >
<title>Dataset::Dataset (133,135,753 samples, 0.03%)</title><rect x="28.8" y="389" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="31.84" y="399.5" ></text>
</g>
<g >
<title>update_process_times (1,056,098,721 samples, 0.22%)</title><rect x="358.2" y="261" width="2.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="361.20" y="271.5" ></text>
</g>
<g >
<title>update_curr (282,848,206 samples, 0.06%)</title><rect x="253.1" y="213" width="0.6" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="256.05" y="223.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (51,132,240 samples, 0.01%)</title><rect x="1188.3" y="405" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1191.35" y="415.5" ></text>
</g>
<g >
<title>ext4_readahead (52,461,173 samples, 0.01%)</title><rect x="10.4" y="101" width="0.2" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="13.43" y="111.5" ></text>
</g>
<g >
<title>[unknown] (994,383,362 samples, 0.21%)</title><rect x="1146.2" y="389" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1149.23" y="399.5" ></text>
</g>
<g >
<title>timekeeping_advance (556,872,718 samples, 0.11%)</title><rect x="885.9" y="229" width="1.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="888.93" y="239.5" ></text>
</g>
<g >
<title>std::basic_ostream&lt;char, std::char_traits&lt;char&gt; &gt;::~basic_ostream (203,976,645 samples, 0.04%)</title><rect x="1182.2" y="389" width="0.5" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="1185.24" y="399.5" ></text>
</g>
<g >
<title>NeuralNetwork::feed_forward (66,371,102 samples, 0.01%)</title><rect x="1182.3" y="341" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1185.30" y="351.5" ></text>
</g>
<g >
<title>irq_exit_rcu (80,987,034 samples, 0.02%)</title><rect x="256.7" y="341" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="259.69" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (58,042,744 samples, 0.01%)</title><rect x="14.5" y="373" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="17.47" y="383.5" ></text>
</g>
<g >
<title>blk_mq_flush_plug_list (45,811,421 samples, 0.01%)</title><rect x="10.3" y="69" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="13.32" y="79.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime_field (83,683,363 samples, 0.02%)</title><rect x="250.7" y="213" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="253.71" y="223.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (53,912,972 samples, 0.01%)</title><rect x="14.5" y="341" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="17.47" y="351.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (78,922,620 samples, 0.02%)</title><rect x="28.5" y="373" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="31.49" y="383.5" ></text>
</g>
<g >
<title>timerqueue_add (92,349,206 samples, 0.02%)</title><rect x="248.6" y="277" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="251.58" y="287.5" ></text>
</g>
<g >
<title>update_process_times (47,683,570 samples, 0.01%)</title><rect x="28.5" y="277" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="31.53" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (76,490,447 samples, 0.02%)</title><rect x="20.4" y="373" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="23.42" y="383.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (170,020,805 samples, 0.04%)</title><rect x="1142.3" y="373" width="0.4" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1145.32" y="383.5" ></text>
</g>
<g >
<title>handle_softirqs (63,985,530 samples, 0.01%)</title><rect x="1141.7" y="309" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="1144.72" y="319.5" ></text>
</g>
<g >
<title>[unknown] (178,222,002 samples, 0.04%)</title><rect x="1145.6" y="357" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1148.64" y="367.5" ></text>
</g>
<g >
<title>_int_malloc (219,556,120 samples, 0.05%)</title><rect x="19.7" y="373" width="0.6" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="22.73" y="383.5" ></text>
</g>
<g >
<title>task_tick_fair (1,170,473,259 samples, 0.24%)</title><rect x="1136.8" y="229" width="2.9" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1139.83" y="239.5" ></text>
</g>
<g >
<title>load_balance (50,851,321 samples, 0.01%)</title><rect x="902.9" y="261" width="0.2" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="905.93" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,573,316,478 samples, 0.32%)</title><rect x="357.2" y="325" width="3.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="360.23" y="335.5" ></text>
</g>
<g >
<title>timerqueue_add (345,803,636 samples, 0.07%)</title><rect x="884.0" y="277" width="0.9" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="887.03" y="287.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (113,308,481 samples, 0.02%)</title><rect x="249.6" y="197" width="0.3" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="252.63" y="207.5" ></text>
</g>
<g >
<title>blk_mq_flush_plug_list.part.0 (45,377,658 samples, 0.01%)</title><rect x="10.3" y="53" width="0.1" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="13.32" y="63.5" ></text>
</g>
<g >
<title>__libc_calloc (64,848,581 samples, 0.01%)</title><rect x="1187.5" y="405" width="0.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1190.46" y="415.5" ></text>
</g>
<g >
<title>run_posix_cpu_timers (55,349,440 samples, 0.01%)</title><rect x="890.3" y="245" width="0.1" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="893.29" y="255.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (220,374,130 samples, 0.05%)</title><rect x="902.7" y="325" width="0.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="905.72" y="335.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (235,892,642 samples, 0.05%)</title><rect x="1136.1" y="213" width="0.6" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="1139.12" y="223.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (47,233,787 samples, 0.01%)</title><rect x="22.8" y="373" width="0.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="25.75" y="383.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (41,632,083 samples, 0.01%)</title><rect x="904.0" y="341" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="907.03" y="351.5" ></text>
</g>
<g >
<title>timerqueue_add (155,964,566 samples, 0.03%)</title><rect x="1132.0" y="277" width="0.3" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="1134.96" y="287.5" ></text>
</g>
<g >
<title>update_min_vruntime (121,993,310 samples, 0.03%)</title><rect x="898.4" y="213" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="901.39" y="223.5" ></text>
</g>
<g >
<title>irq_work_tick (64,913,917 samples, 0.01%)</title><rect x="887.4" y="261" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="890.43" y="271.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (42,183,176 samples, 0.01%)</title><rect x="885.4" y="277" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="888.36" y="287.5" ></text>
</g>
<g >
<title>task_tick_fair (477,780,168 samples, 0.10%)</title><rect x="359.2" y="229" width="1.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="362.16" y="239.5" ></text>
</g>
<g >
<title>update_process_times (202,707,589 samples, 0.04%)</title><rect x="1180.4" y="261" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1183.44" y="271.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (446,827,022 samples, 0.09%)</title><rect x="891.6" y="213" width="1.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="894.58" y="223.5" ></text>
</g>
<g >
<title>NeuralNetwork::back_propagate (41,854,143 samples, 0.01%)</title><rect x="23.6" y="405" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="26.63" y="415.5" ></text>
</g>
<g >
<title>update_load_avg (45,642,562 samples, 0.01%)</title><rect x="1180.7" y="213" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1183.73" y="223.5" ></text>
</g>
<g >
<title>operator new (45,651,663 samples, 0.01%)</title><rect x="1181.8" y="389" width="0.2" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="1184.84" y="399.5" ></text>
</g>
<g >
<title>rebalance_domains (60,068,023 samples, 0.01%)</title><rect x="902.9" y="277" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="905.91" y="287.5" ></text>
</g>
<g >
<title>update_min_vruntime (51,795,829 samples, 0.01%)</title><rect x="255.0" y="213" width="0.1" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="258.00" y="223.5" ></text>
</g>
<g >
<title>update_process_times (2,261,974,675 samples, 0.47%)</title><rect x="250.5" y="261" width="5.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="253.45" y="271.5" ></text>
</g>
<g >
<title>main (203,466,029 samples, 0.04%)</title><rect x="1182.2" y="357" width="0.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="1185.24" y="367.5" ></text>
</g>
<g >
<title>task_tick_fair (997,712,702 samples, 0.21%)</title><rect x="252.7" y="229" width="2.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="255.69" y="239.5" ></text>
</g>
<g >
<title>rand (106,443,418 samples, 0.02%)</title><rect x="23.8" y="389" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="26.77" y="399.5" ></text>
</g>
<g >
<title>sugov_get_util (69,612,664 samples, 0.01%)</title><rect x="898.1" y="181" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="901.15" y="191.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (461,545,804 samples, 0.10%)</title><rect x="249.1" y="277" width="1.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="252.09" y="287.5" ></text>
</g>
<g >
<title>trigger_load_balance (251,966,779 samples, 0.05%)</title><rect x="898.7" y="229" width="0.6" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="901.69" y="239.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (195,532,968 samples, 0.04%)</title><rect x="1144.8" y="373" width="0.5" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1147.82" y="383.5" ></text>
</g>
<g >
<title>__GI___libc_open (46,631,636 samples, 0.01%)</title><rect x="28.9" y="293" width="0.1" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="31.87" y="303.5" ></text>
</g>
<g >
<title>update_cfs_group (143,698,798 samples, 0.03%)</title><rect x="255.3" y="229" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="258.35" y="239.5" ></text>
</g>
<g >
<title>tick_sched_handle (48,696,901 samples, 0.01%)</title><rect x="28.5" y="293" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="31.53" y="303.5" ></text>
</g>
<g >
<title>malloc (93,790,048 samples, 0.02%)</title><rect x="1146.9" y="357" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1149.87" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (8,086,876,163 samples, 1.67%)</title><rect x="882.8" y="325" width="19.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="885.78" y="335.5" ></text>
</g>
<g >
<title>ksys_read (163,802,390 samples, 0.03%)</title><rect x="10.2" y="277" width="0.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.17" y="287.5" ></text>
</g>
<g >
<title>update_curr (136,840,359 samples, 0.03%)</title><rect x="359.3" y="213" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="362.34" y="223.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (195,043,665 samples, 0.04%)</title><rect x="1131.9" y="293" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1134.86" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle (46,670,975 samples, 0.01%)</title><rect x="20.5" y="293" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="23.46" y="303.5" ></text>
</g>
<g >
<title>blk_mq_dispatch_plug_list (44,101,276 samples, 0.01%)</title><rect x="10.3" y="37" width="0.1" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="13.32" y="47.5" ></text>
</g>
<g >
<title>void Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (189,292,820 samples, 0.04%)</title><rect x="15.4" y="389" width="0.5" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="18.41" y="399.5" ></text>
</g>
<g >
<title>update_vsyscall (91,969,788 samples, 0.02%)</title><rect x="887.0" y="197" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="889.96" y="207.5" ></text>
</g>
<g >
<title>perf_event_task_tick (602,109,305 samples, 0.12%)</title><rect x="891.4" y="229" width="1.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="894.39" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (3,616,453,375 samples, 0.75%)</title><rect x="247.8" y="341" width="8.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="250.83" y="351.5" ></text>
</g>
<g >
<title>malloc (87,850,742 samples, 0.02%)</title><rect x="1145.7" y="325" width="0.3" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="1148.74" y="335.5" ></text>
</g>
<g >
<title>void Eigen::internal::gemv_dense_selector&lt;2, 1, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const&gt;, Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, 1, -1, false&gt; const&gt;, Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 1, -1, false&gt; &gt; &gt; (301,612,721 samples, 0.06%)</title><rect x="22.9" y="373" width="0.7" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="25.89" y="383.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (97,316,836 samples, 0.02%)</title><rect x="1133.3" y="197" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="1136.26" y="207.5" ></text>
</g>
<g >
<title>void Eigen::internal::generic_product_impl&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (556,359,908 samples, 0.11%)</title><rect x="22.3" y="389" width="1.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="25.27" y="399.5" ></text>
</g>
<g >
<title>timekeeping_update (230,029,592 samples, 0.05%)</title><rect x="249.6" y="213" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="252.57" y="223.5" ></text>
</g>
<g >
<title>account_process_tick (603,704,534 samples, 0.12%)</title><rect x="887.9" y="245" width="1.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="890.91" y="255.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (160,233,117 samples, 0.03%)</title><rect x="903.6" y="325" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="906.64" y="335.5" ></text>
</g>
<g >
<title>blk_finish_plug (46,620,671 samples, 0.01%)</title><rect x="10.3" y="101" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="13.32" y="111.5" ></text>
</g>
<g >
<title>cpuacct_account_field (79,888,180 samples, 0.02%)</title><rect x="1134.7" y="213" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1137.69" y="223.5" ></text>
</g>
<g >
<title>fopen@@GLIBC_2.2.5 (48,220,727 samples, 0.01%)</title><rect x="28.9" y="341" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="31.87" y="351.5" ></text>
</g>
<g >
<title>[unknown] (42,637,350 samples, 0.01%)</title><rect x="1147.6" y="373" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1150.56" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (76,895,352 samples, 0.02%)</title><rect x="1187.3" y="373" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1190.27" y="383.5" ></text>
</g>
<g >
<title>ext4_mpage_readpages (51,628,264 samples, 0.01%)</title><rect x="10.4" y="85" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="13.43" y="95.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,476,293,364 samples, 1.34%)</title><rect x="345.5" y="373" width="15.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="348.54" y="383.5" ></text>
</g>
<g >
<title>update_cfs_group (177,869,693 samples, 0.04%)</title><rect x="1140.0" y="229" width="0.4" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="1142.96" y="239.5" ></text>
</g>
<g >
<title>Layer::back_propagate (127,142,722 samples, 0.03%)</title><rect x="1145.6" y="341" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1148.64" y="351.5" ></text>
</g>
<g >
<title>update_cfs_group (87,304,866 samples, 0.02%)</title><rect x="360.4" y="229" width="0.2" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="363.42" y="239.5" ></text>
</g>
<g >
<title>Sigmoid::func (1,913,363,453 samples, 0.39%)</title><rect x="24.0" y="405" width="4.7" height="15.0" fill="rgb(224,87,20)" rx="2" ry="2" />
<text  x="27.03" y="415.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (151,806,812 samples, 0.03%)</title><rect x="252.2" y="213" width="0.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="255.24" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_openat (43,823,574 samples, 0.01%)</title><rect x="28.9" y="229" width="0.1" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="31.88" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (4,188,736,114 samples, 0.86%)</title><rect x="1131.3" y="325" width="10.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1134.32" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (46,961,520 samples, 0.01%)</title><rect x="1182.1" y="373" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1185.12" y="383.5" ></text>
</g>
<g >
<title>task_tick_fair (91,328,121 samples, 0.02%)</title><rect x="1180.6" y="229" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1183.63" y="239.5" ></text>
</g>
<g >
<title>malloc (60,068,211 samples, 0.01%)</title><rect x="15.2" y="389" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="18.25" y="399.5" ></text>
</g>
<g >
<title>rand (94,728,093 samples, 0.02%)</title><rect x="14.9" y="389" width="0.2" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="17.86" y="399.5" ></text>
</g>
<g >
<title>cpuacct_charge (63,424,007 samples, 0.01%)</title><rect x="894.9" y="197" width="0.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="897.94" y="207.5" ></text>
</g>
<g >
<title>update_curr_se (58,520,262 samples, 0.01%)</title><rect x="253.6" y="197" width="0.1" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="256.59" y="207.5" ></text>
</g>
<g >
<title>update_process_times (5,444,335,822 samples, 1.12%)</title><rect x="887.8" y="261" width="13.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="890.80" y="271.5" ></text>
</g>
<g >
<title>void Eigen::internal::generic_product_impl&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt;, Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, Eigen::DenseShape, Eigen::DenseShape, 8&gt;::scaleAndAddTo&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; (219,530,365 samples, 0.05%)</title><rect x="1143.2" y="373" width="0.6" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1146.22" y="383.5" ></text>
</g>
<g >
<title>page_cache_sync_ra (120,220,208 samples, 0.02%)</title><rect x="10.3" y="181" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="13.27" y="191.5" ></text>
</g>
<g >
<title>task_tick_mm_cid (50,153,770 samples, 0.01%)</title><rect x="1140.6" y="245" width="0.1" height="15.0" fill="rgb(231,124,29)" rx="2" ry="2" />
<text  x="1143.56" y="255.5" ></text>
</g>
<g >
<title>_int_free_merge_chunk (66,420,791 samples, 0.01%)</title><rect x="1145.1" y="357" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1148.13" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (162,609,669 samples, 0.03%)</title><rect x="1180.5" y="245" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1183.53" y="255.5" ></text>
</g>
<g >
<title>perf_event_task_tick (201,776,714 samples, 0.04%)</title><rect x="252.2" y="229" width="0.5" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="255.16" y="239.5" ></text>
</g>
<g >
<title>__memset_sse2_unaligned_erms (13,155,211,545 samples, 2.71%)</title><rect x="1149.1" y="389" width="32.0" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1152.09" y="399.5" >__..</text>
</g>
<g >
<title>hrtimer_interrupt (3,519,644,950 samples, 0.73%)</title><rect x="248.0" y="325" width="8.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="251.00" y="335.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (127,279,326 samples, 0.03%)</title><rect x="251.4" y="245" width="0.4" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="254.44" y="255.5" ></text>
</g>
<g >
<title>__remove_hrtimer (77,713,303 samples, 0.02%)</title><rect x="1131.7" y="293" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="1134.67" y="303.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (74,408,077 samples, 0.02%)</title><rect x="1182.5" y="341" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1185.55" y="351.5" ></text>
</g>
<g >
<title>train (474,142,696,702 samples, 97.80%)</title><rect x="28.7" y="405" width="1154.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="31.70" y="415.5" >train</text>
</g>
<g >
<title>irqentry_exit_to_user_mode (44,076,758 samples, 0.01%)</title><rect x="257.0" y="325" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="259.99" y="335.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (761,456,556 samples, 0.16%)</title><rect x="885.5" y="277" width="1.8" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="888.47" y="287.5" ></text>
</g>
<g >
<title>account_process_tick (303,649,569 samples, 0.06%)</title><rect x="250.5" y="245" width="0.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="253.50" y="255.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (123,899,684 samples, 0.03%)</title><rect x="1135.2" y="245" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1138.17" y="255.5" ></text>
</g>
<g >
<title>calc_global_load (56,282,740 samples, 0.01%)</title><rect x="885.6" y="245" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="888.60" y="255.5" ></text>
</g>
<g >
<title>update_vsyscall (52,834,980 samples, 0.01%)</title><rect x="1133.6" y="197" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1136.57" y="207.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (320,143,872 samples, 0.07%)</title><rect x="1180.2" y="341" width="0.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1183.23" y="351.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (151,877,229 samples, 0.03%)</title><rect x="1148.7" y="389" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1151.72" y="399.5" ></text>
</g>
<g >
<title>update_load_avg (1,247,215,982 samples, 0.26%)</title><rect x="895.4" y="213" width="3.0" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="898.36" y="223.5" ></text>
</g>
<g >
<title>__random (70,758,959 samples, 0.01%)</title><rect x="14.9" y="373" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="17.86" y="383.5" ></text>
</g>
<g >
<title>cpp_vec_from_eigen_vec (65,706,938 samples, 0.01%)</title><rect x="1148.4" y="373" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1151.36" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4,024,302,670 samples, 0.83%)</title><rect x="247.4" y="373" width="9.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="250.35" y="383.5" ></text>
</g>
<g >
<title>error_return (69,086,818 samples, 0.01%)</title><rect x="904.2" y="373" width="0.2" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="907.25" y="383.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (54,385,853 samples, 0.01%)</title><rect x="254.1" y="197" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="257.12" y="207.5" ></text>
</g>
<g >
<title>account_user_time (117,323,795 samples, 0.02%)</title><rect x="358.2" y="229" width="0.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="361.23" y="239.5" ></text>
</g>
<g >
<title>Eigen::internal::gebp_kernel&lt;float, float, long, Eigen::internal::blas_data_mapper&lt;float, long, 0, 0, 1&gt;, 8, 4, false, false&gt;::operator (93,741,396,216 samples, 19.34%)</title><rect x="29.2" y="389" width="228.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="32.17" y="399.5" >Eigen::internal::gebp_kernel&lt;f..</text>
</g>
<g >
<title>notifier_call_chain (42,696,218 samples, 0.01%)</title><rect x="1133.3" y="181" width="0.1" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="1136.27" y="191.5" ></text>
</g>
<g >
<title>timekeeping_advance (334,342,556 samples, 0.07%)</title><rect x="249.4" y="229" width="0.8" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="252.37" y="239.5" ></text>
</g>
<g >
<title>tick_program_event (66,039,199 samples, 0.01%)</title><rect x="256.4" y="309" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="259.41" y="319.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (1,313,803,348 samples, 0.27%)</title><rect x="357.6" y="293" width="3.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="360.59" y="303.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (93,622,430 samples, 0.02%)</title><rect x="1139.7" y="213" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1142.73" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (168,112,481 samples, 0.03%)</title><rect x="10.2" y="325" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.17" y="335.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (60,774,172 samples, 0.01%)</title><rect x="903.8" y="309" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="906.81" y="319.5" ></text>
</g>
<g >
<title>read (168,463,968 samples, 0.03%)</title><rect x="10.2" y="357" width="0.4" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="13.16" y="367.5" ></text>
</g>
<g >
<title>account_user_time (267,893,072 samples, 0.06%)</title><rect x="250.5" y="229" width="0.7" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="253.53" y="239.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (121,932,847 samples, 0.03%)</title><rect x="1181.2" y="389" width="0.3" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1184.22" y="399.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (54,737,930 samples, 0.01%)</title><rect x="891.0" y="229" width="0.1" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="893.98" y="239.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::underflow (171,014,525 samples, 0.04%)</title><rect x="10.2" y="373" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="13.16" y="383.5" ></text>
</g>
<g >
<title>operator new (50,227,988 samples, 0.01%)</title><rect x="28.7" y="373" width="0.1" height="15.0" fill="rgb(216,51,12)" rx="2" ry="2" />
<text  x="31.71" y="383.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (91,403,160 samples, 0.02%)</title><rect x="1141.7" y="325" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="1144.67" y="335.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (121,214,549 samples, 0.03%)</title><rect x="248.5" y="293" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="251.50" y="303.5" ></text>
</g>
<g >
<title>[unknown] (178,222,002 samples, 0.04%)</title><rect x="1145.6" y="373" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1148.64" y="383.5" ></text>
</g>
<g >
<title>trigger_load_balance (92,442,963 samples, 0.02%)</title><rect x="255.1" y="229" width="0.2" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="258.12" y="239.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (53,304,789 samples, 0.01%)</title><rect x="20.4" y="309" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="23.44" y="319.5" ></text>
</g>
<g >
<title>__update_load_avg_se (163,281,436 samples, 0.03%)</title><rect x="896.6" y="197" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="899.56" y="207.5" ></text>
</g>
<g >
<title>sync_regs (41,230,463 samples, 0.01%)</title><rect x="904.4" y="373" width="0.1" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="907.41" y="383.5" ></text>
</g>
<g >
<title>sugov_update_single_freq (147,227,462 samples, 0.03%)</title><rect x="1139.2" y="197" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="1142.17" y="207.5" ></text>
</g>
<g >
<title>timekeeping_advance (316,116,377 samples, 0.07%)</title><rect x="1133.0" y="229" width="0.8" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1135.98" y="239.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (73,664,190 samples, 0.02%)</title><rect x="255.2" y="213" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="258.17" y="223.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (55,268,245 samples, 0.01%)</title><rect x="1187.3" y="309" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="1190.29" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (45,866,611 samples, 0.01%)</title><rect x="28.9" y="261" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="31.87" y="271.5" ></text>
</g>
<g >
<title>CyclesLogEncoder::decode (56,400,038 samples, 0.01%)</title><rect x="28.7" y="389" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="31.70" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,464,729,262 samples, 0.30%)</title><rect x="357.3" y="309" width="3.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="360.26" y="319.5" ></text>
</g>
<g >
<title>lapic_next_deadline (49,959,723 samples, 0.01%)</title><rect x="902.3" y="293" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="905.34" y="303.5" ></text>
</g>
<g >
<title>update_wall_time (366,748,854 samples, 0.08%)</title><rect x="249.3" y="245" width="0.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="252.30" y="255.5" ></text>
</g>
<g >
<title>__remove_hrtimer (117,873,849 samples, 0.02%)</title><rect x="883.5" y="293" width="0.3" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="886.49" y="303.5" ></text>
</g>
<g >
<title>irq_exit_rcu (107,877,077 samples, 0.02%)</title><rect x="1141.7" y="341" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1144.67" y="351.5" ></text>
</g>
<g >
<title>update_curr_se (62,950,871 samples, 0.01%)</title><rect x="1137.9" y="197" width="0.2" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="1140.93" y="207.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (162,286,859 samples, 0.03%)</title><rect x="896.2" y="197" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="899.17" y="207.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (43,249,994 samples, 0.01%)</title><rect x="1147.2" y="357" width="0.1" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="1150.16" y="367.5" ></text>
</g>
<g >
<title>scheduler_tick (1,628,864,004 samples, 0.34%)</title><rect x="251.8" y="245" width="4.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="254.84" y="255.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (166,015,332 samples, 0.03%)</title><rect x="357.7" y="277" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="360.71" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (70,222,954 samples, 0.01%)</title><rect x="28.5" y="341" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="31.49" y="351.5" ></text>
</g>
<g >
<title>hrtimer_active (41,418,667 samples, 0.01%)</title><rect x="893.6" y="213" width="0.1" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="896.58" y="223.5" ></text>
</g>
<g >
<title>perf_event_task_tick (312,901,577 samples, 0.06%)</title><rect x="1136.0" y="229" width="0.8" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="1139.02" y="239.5" ></text>
</g>
<g >
<title>rcu_pending (89,782,256 samples, 0.02%)</title><rect x="890.0" y="229" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="893.00" y="239.5" ></text>
</g>
<g >
<title>cpufreq_this_cpu_can_update (152,700,495 samples, 0.03%)</title><rect x="897.0" y="197" width="0.3" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="899.96" y="207.5" ></text>
</g>
<g >
<title>update_load_avg (514,044,327 samples, 0.11%)</title><rect x="253.7" y="213" width="1.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="256.75" y="223.5" ></text>
</g>
<g >
<title>_int_malloc (50,499,287 samples, 0.01%)</title><rect x="1145.8" y="309" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1148.81" y="319.5" ></text>
</g>
<g >
<title>Layer::back_propagate (319,744,729 samples, 0.07%)</title><rect x="15.1" y="405" width="0.8" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="18.09" y="415.5" ></text>
</g>
<g >
<title>std::basic_istream&lt;char, std::char_traits&lt;char&gt; &gt;&amp; std::getline&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (180,158,257 samples, 0.04%)</title><rect x="10.1" y="389" width="0.5" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="13.14" y="399.5" ></text>
</g>
<g >
<title>cpp_vec_from_eigen_vec (89,590,774 samples, 0.02%)</title><rect x="1181.5" y="389" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1184.52" y="399.5" ></text>
</g>
<g >
<title>perf_event_task_tick (113,196,929 samples, 0.02%)</title><rect x="358.9" y="229" width="0.2" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="361.87" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (49,820,326 samples, 0.01%)</title><rect x="14.5" y="325" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="17.47" y="335.5" ></text>
</g>
<g >
<title>_int_malloc (47,332,894 samples, 0.01%)</title><rect x="15.3" y="373" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="18.26" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (347,480,537 samples, 0.07%)</title><rect x="1180.2" y="357" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1183.23" y="367.5" ></text>
</g>
<g >
<title>NeuralNetwork::get_prediction (66,345,839 samples, 0.01%)</title><rect x="1147.1" y="373" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1150.10" y="383.5" ></text>
</g>
<g >
<title>x64_sys_call (44,188,981 samples, 0.01%)</title><rect x="28.9" y="245" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="31.87" y="255.5" ></text>
</g>
<g >
<title>void Eigen::internal::gemv_dense_selector&lt;2, 0, true&gt;::run&lt;Eigen::Transpose&lt;Eigen::Transpose&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; &gt; const&gt;, Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt; const, 1, -1, false&gt; const&gt;, Eigen::Transpose&lt;Eigen::Block&lt;Eigen::Matrix&lt;float, -1, -1, 0, -1, -1&gt;, 1, -1, false&gt; &gt; &gt; (48,939,053 samples, 0.01%)</title><rect x="1130.2" y="357" width="0.1" height="15.0" fill="rgb(245,188,45)" rx="2" ry="2" />
<text  x="1133.22" y="367.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (1,464,350,491 samples, 0.30%)</title><rect x="11.0" y="405" width="3.6" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="14.05" y="415.5" ></text>
</g>
<g >
<title>_int_malloc (82,015,685 samples, 0.02%)</title><rect x="1146.9" y="341" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1149.88" y="351.5" ></text>
</g>
<g >
<title>pvclock_gtod_notify (53,619,434 samples, 0.01%)</title><rect x="1133.4" y="181" width="0.1" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1136.37" y="191.5" ></text>
</g>
<g >
<title>trigger_load_balance (114,195,419 samples, 0.02%)</title><rect x="1139.7" y="229" width="0.3" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="1142.68" y="239.5" ></text>
</g>
<g >
<title>handle_softirqs (146,233,537 samples, 0.03%)</title><rect x="902.9" y="309" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="905.86" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (79,543,167 samples, 0.02%)</title><rect x="20.4" y="389" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="23.41" y="399.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4,872,662,052 samples, 1.01%)</title><rect x="1130.4" y="373" width="11.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1133.44" y="383.5" ></text>
</g>
<g >
<title>account_process_tick (130,451,525 samples, 0.03%)</title><rect x="358.2" y="245" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="361.21" y="255.5" ></text>
</g>
<g >
<title>_int_free_merge_chunk (75,582,975 samples, 0.02%)</title><rect x="21.0" y="373" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="23.97" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,706,506,933 samples, 0.35%)</title><rect x="357.2" y="357" width="4.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="360.15" y="367.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (84,515,538 samples, 0.02%)</title><rect x="358.9" y="213" width="0.2" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="361.90" y="223.5" ></text>
</g>
<g >
<title>rb_next (47,840,010 samples, 0.01%)</title><rect x="1131.7" y="277" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1134.74" y="287.5" ></text>
</g>
<g >
<title>__random (80,787,966 samples, 0.02%)</title><rect x="23.8" y="373" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="26.77" y="383.5" ></text>
</g>
<g >
<title>timerqueue_add (52,139,654 samples, 0.01%)</title><rect x="357.4" y="277" width="0.2" height="15.0" fill="rgb(214,42,10)" rx="2" ry="2" />
<text  x="360.43" y="287.5" ></text>
</g>
<g >
<title>NeuralNetwork::feed_forward (233,337,771 samples, 0.05%)</title><rect x="1146.5" y="373" width="0.6" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1149.53" y="383.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (54,806,130 samples, 0.01%)</title><rect x="28.5" y="309" width="0.2" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="31.52" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;float  (405,858,243 samples, 0.08%)</title><rect x="1188.9" y="405" width="1.0" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="1191.89" y="415.5" ></text>
</g>
<g >
<title>filemap_read (159,282,144 samples, 0.03%)</title><rect x="10.2" y="213" width="0.4" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="13.18" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (59,081,955 samples, 0.01%)</title><rect x="14.5" y="389" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="17.47" y="399.5" ></text>
</g>
<g >
<title>_IO_file_open (46,631,636 samples, 0.01%)</title><rect x="28.9" y="309" width="0.1" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="31.87" y="319.5" ></text>
</g>
<g >
<title>effective_cpu_util (42,285,470 samples, 0.01%)</title><rect x="898.0" y="181" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="901.02" y="191.5" ></text>
</g>
<g >
<title>task_tick_fair (2,355,689,160 samples, 0.49%)</title><rect x="893.0" y="229" width="5.7" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="895.95" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_next_event_base (71,522,353 samples, 0.01%)</title><rect x="901.5" y="293" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="904.54" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (54,934,714 samples, 0.01%)</title><rect x="14.5" y="357" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="17.47" y="367.5" ></text>
</g>
<g >
<title>_IO_file_fopen@@GLIBC_2.2.5 (47,425,178 samples, 0.01%)</title><rect x="28.9" y="325" width="0.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="31.87" y="335.5" ></text>
</g>
<g >
<title>rb_next (46,473,435 samples, 0.01%)</title><rect x="248.4" y="277" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="251.38" y="287.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime_field (105,503,873 samples, 0.02%)</title><rect x="1134.3" y="213" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="1137.31" y="223.5" ></text>
</g>
<g >
<title>cpufreq_this_cpu_can_update (72,575,872 samples, 0.01%)</title><rect x="1138.9" y="197" width="0.2" height="15.0" fill="rgb(220,71,17)" rx="2" ry="2" />
<text  x="1141.88" y="207.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (417,918,544 samples, 0.09%)</title><rect x="249.2" y="261" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="252.17" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64_after_hwframe (45,866,611 samples, 0.01%)</title><rect x="28.9" y="277" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="31.87" y="287.5" ></text>
</g>
<g >
<title>tick_program_event (102,635,955 samples, 0.02%)</title><rect x="1141.3" y="309" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="1144.27" y="319.5" ></text>
</g>
<g >
<title>update_process_times (47,090,181 samples, 0.01%)</title><rect x="1187.3" y="277" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="1190.31" y="287.5" ></text>
</g>
<g >
<title>notifier_call_chain (49,342,186 samples, 0.01%)</title><rect x="249.6" y="181" width="0.2" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="252.63" y="191.5" ></text>
</g>
<g >
<title>update_min_vruntime (54,062,495 samples, 0.01%)</title><rect x="1139.5" y="213" width="0.2" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="1142.55" y="223.5" ></text>
</g>
<g >
<title>Sigmoid::deriv (320,838,359 samples, 0.07%)</title><rect x="1145.4" y="389" width="0.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="1148.45" y="399.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,094,330,530 samples, 0.23%)</title><rect x="358.1" y="277" width="2.7" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="361.11" y="287.5" ></text>
</g>
<g >
<title>update_rq_clock (49,030,832 samples, 0.01%)</title><rect x="900.4" y="229" width="0.1" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="903.40" y="239.5" ></text>
</g>
<g >
<title>notifier_call_chain (87,876,055 samples, 0.02%)</title><rect x="886.3" y="181" width="0.3" height="15.0" fill="rgb(216,52,12)" rx="2" ry="2" />
<text  x="889.34" y="191.5" ></text>
</g>
<g >
<title>__powf_sse2 (42,546,352 samples, 0.01%)</title><rect x="1181.1" y="389" width="0.1" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="1184.11" y="399.5" ></text>
</g>
<g >
<title>tick_nohz_highres_handler (44,117,303 samples, 0.01%)</title><rect x="14.5" y="309" width="0.1" height="15.0" fill="rgb(215,50,11)" rx="2" ry="2" />
<text  x="17.48" y="319.5" ></text>
</g>
<g >
<title>Layer::back_propagate (98,206,474,884 samples, 20.26%)</title><rect x="904.7" y="389" width="239.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="907.72" y="399.5" >Layer::back_propagate</text>
</g>
<g >
<title>malloc (49,721,794 samples, 0.01%)</title><rect x="28.7" y="357" width="0.1" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="31.72" y="367.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_matrix_product&lt;long, float, 1, false, float, 0, false, 0, 1&gt;::run (115,028,290 samples, 0.02%)</title><rect x="1143.5" y="357" width="0.2" height="15.0" fill="rgb(242,171,40)" rx="2" ry="2" />
<text  x="1146.46" y="367.5" ></text>
</g>
<g >
<title>tick_sched_handle (209,903,725 samples, 0.04%)</title><rect x="1180.4" y="277" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1183.43" y="287.5" ></text>
</g>
<g >
<title>handle_softirqs (52,134,220 samples, 0.01%)</title><rect x="256.7" y="309" width="0.2" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="259.72" y="319.5" ></text>
</g>
<g >
<title>run_rebalance_domains (97,532,094 samples, 0.02%)</title><rect x="902.9" y="293" width="0.2" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="905.90" y="303.5" ></text>
</g>
<g >
<title>Layer::feed_forward (3,186,735,149 samples, 0.66%)</title><rect x="15.9" y="405" width="7.7" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="18.87" y="415.5" ></text>
</g>
<g >
<title>nohz_balancer_kick (199,588,639 samples, 0.04%)</title><rect x="898.8" y="213" width="0.5" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="901.82" y="223.5" ></text>
</g>
<g >
<title>update_process_times (44,618,553 samples, 0.01%)</title><rect x="20.5" y="277" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="23.46" y="287.5" ></text>
</g>
<g >
<title>update_cfs_group (392,598,570 samples, 0.08%)</title><rect x="899.3" y="229" width="1.0" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="902.30" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (69,232,052 samples, 0.01%)</title><rect x="20.4" y="341" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="23.42" y="351.5" ></text>
</g>
<g >
<title>x64_sys_call (164,166,622 samples, 0.03%)</title><rect x="10.2" y="309" width="0.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="13.17" y="319.5" ></text>
</g>
<g >
<title>update_wall_time (352,247,713 samples, 0.07%)</title><rect x="1132.9" y="245" width="0.9" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1135.90" y="255.5" ></text>
</g>
<g >
<title>malloc (432,765,155 samples, 0.09%)</title><rect x="21.2" y="389" width="1.0" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="24.19" y="399.5" ></text>
</g>
<g >
<title>std::basic_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::open (77,066,987 samples, 0.02%)</title><rect x="28.9" y="373" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="31.86" y="383.5" ></text>
</g>
<g >
<title>timekeeping_update (203,413,793 samples, 0.04%)</title><rect x="1133.2" y="213" width="0.5" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="1136.20" y="223.5" ></text>
</g>
<g >
<title>sugov_update_single_freq (122,868,714 samples, 0.03%)</title><rect x="254.7" y="197" width="0.3" height="15.0" fill="rgb(250,208,49)" rx="2" ry="2" />
<text  x="257.68" y="207.5" ></text>
</g>
<g >
<title>tick_program_event (212,816,817 samples, 0.04%)</title><rect x="901.9" y="309" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="904.94" y="319.5" ></text>
</g>
<g >
<title>scheduler_tick (795,625,273 samples, 0.16%)</title><rect x="358.7" y="245" width="2.0" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="361.74" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (71,734,073 samples, 0.01%)</title><rect x="28.5" y="357" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="31.49" y="367.5" ></text>
</g>
<g >
<title>irqentry_exit (259,850,544 samples, 0.05%)</title><rect x="903.4" y="341" width="0.6" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="906.40" y="351.5" ></text>
</g>
<g >
<title>vfs_read (163,802,390 samples, 0.03%)</title><rect x="10.2" y="261" width="0.4" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="13.17" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (63,971,540 samples, 0.01%)</title><rect x="1187.3" y="325" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1190.28" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (284,577,519 samples, 0.06%)</title><rect x="1180.3" y="309" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1183.26" y="319.5" ></text>
</g>
<g >
<title>cpuacct_account_field (63,557,820 samples, 0.01%)</title><rect x="251.0" y="213" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="254.03" y="223.5" ></text>
</g>
<g >
<title>ext4_file_read_iter (160,452,150 samples, 0.03%)</title><rect x="10.2" y="245" width="0.4" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.18" y="255.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (72,873,511 samples, 0.02%)</title><rect x="1142.1" y="325" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1145.05" y="335.5" ></text>
</g>
<g >
<title>common_interrupt (56,965,560 samples, 0.01%)</title><rect x="881.6" y="357" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="884.61" y="367.5" ></text>
</g>
<g >
<title>Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 1&gt;, 1, false, float, Eigen::internal::const_blas_data_mapper&lt;float, long, 0&gt;, false, 0&gt;::run (223,141,032,393 samples, 46.03%)</title><rect x="361.4" y="389" width="543.1" height="15.0" fill="rgb(226,100,23)" rx="2" ry="2" />
<text  x="364.42" y="399.5" >Eigen::internal::general_matrix_vector_product&lt;long, float, Eigen::interna..</text>
</g>
<g >
<title>std::__basic_file&lt;char&gt;::open (49,038,275 samples, 0.01%)</title><rect x="28.9" y="357" width="0.1" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="31.87" y="367.5" ></text>
</g>
<g >
<title>tick_sched_handle (48,646,096 samples, 0.01%)</title><rect x="1187.3" y="293" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1190.31" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3,888,597,599 samples, 0.80%)</title><rect x="1131.4" y="309" width="9.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1134.43" y="319.5" ></text>
</g>
<g >
<title>__update_load_avg_se (92,441,302 samples, 0.02%)</title><rect x="1138.7" y="197" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1141.65" y="207.5" ></text>
</g>
<g >
<title>nohz_balance_exit_idle (41,620,628 samples, 0.01%)</title><rect x="898.7" y="213" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="901.72" y="223.5" ></text>
</g>
<g >
<title>Layer::feed_forward (77,079,921 samples, 0.02%)</title><rect x="1146.3" y="373" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="1149.32" y="383.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (3,275,687,345 samples, 0.68%)</title><rect x="248.1" y="309" width="8.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="251.11" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (5,641,655,390 samples, 1.16%)</title><rect x="887.3" y="277" width="13.8" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="890.32" y="287.5" ></text>
</g>
<g >
<title>asm_common_interrupt (59,422,472 samples, 0.01%)</title><rect x="881.6" y="373" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="884.60" y="383.5" ></text>
</g>
<g >
<title>all (484,794,700,579 samples, 100%)</title><rect x="10.0" y="437" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (64,312,670 samples, 0.01%)</title><rect x="357.4" y="293" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="360.40" y="303.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (73,411,213 samples, 0.02%)</title><rect x="1138.5" y="197" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="1141.47" y="207.5" ></text>
</g>
<g >
<title>_int_malloc (106,740,645 samples, 0.02%)</title><rect x="1142.8" y="357" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1145.83" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (310,730,877 samples, 0.06%)</title><rect x="1180.2" y="325" width="0.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1183.25" y="335.5" ></text>
</g>
<g >
<title>update_curr (358,261,132 samples, 0.07%)</title><rect x="1137.2" y="213" width="0.9" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="1140.23" y="223.5" ></text>
</g>
<g >
<title>NeuralNetwork::log_epoch_metrics (96,897,542 samples, 0.02%)</title><rect x="1147.3" y="373" width="0.2" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1150.26" y="383.5" ></text>
</g>
<g >
<title>ktime_get (42,298,327 samples, 0.01%)</title><rect x="1132.4" y="277" width="0.1" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="1135.44" y="287.5" ></text>
</g>
<g >
<title>update_load_avg (593,339,999 samples, 0.12%)</title><rect x="1138.1" y="213" width="1.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1141.10" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (61,504,080 samples, 0.01%)</title><rect x="20.4" y="325" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="23.43" y="335.5" ></text>
</g>
<g >
<title>__expf_sse2 (1,927,356,230 samples, 0.40%)</title><rect x="1182.8" y="405" width="4.7" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1185.77" y="415.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (45,633,135 samples, 0.01%)</title><rect x="357.9" y="197" width="0.1" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="360.90" y="207.5" ></text>
</g>
<g >
<title>NeuralNetwork::reset (122,797,768 samples, 0.03%)</title><rect x="23.7" y="405" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="26.73" y="415.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,609,334,053 samples, 0.33%)</title><rect x="357.2" y="341" width="3.9" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="360.17" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (79,939,301 samples, 0.02%)</title><rect x="28.5" y="389" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="31.49" y="399.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (9,205,907,768 samples, 1.90%)</title><rect x="881.7" y="373" width="22.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="884.75" y="383.5" >a..</text>
</g>
<g >
<title>_int_malloc (50,974,636 samples, 0.01%)</title><rect x="1130.2" y="373" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="1133.21" y="383.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4,610,193,423 samples, 0.95%)</title><rect x="1131.1" y="357" width="11.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1134.08" y="367.5" ></text>
</g>
<g >
<title>[unknown] (203,976,645 samples, 0.04%)</title><rect x="1182.2" y="373" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="1185.24" y="383.5" ></text>
</g>
<g >
<title>account_user_time (524,206,465 samples, 0.11%)</title><rect x="888.0" y="229" width="1.3" height="15.0" fill="rgb(225,96,23)" rx="2" ry="2" />
<text  x="890.98" y="239.5" ></text>
</g>
<g >
<title>tick_program_event (50,730,872 samples, 0.01%)</title><rect x="902.5" y="325" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="905.50" y="335.5" ></text>
</g>
<g >
<title>timekeeping_update (390,818,277 samples, 0.08%)</title><rect x="886.2" y="213" width="1.0" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="889.23" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (62,303,205 samples, 0.01%)</title><rect x="1146.1" y="373" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1149.08" y="383.5" ></text>
</g>
<g >
<title>account_process_tick (349,697,478 samples, 0.07%)</title><rect x="1134.1" y="245" width="0.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1137.08" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (63,545,194 samples, 0.01%)</title><rect x="28.5" y="325" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="31.50" y="335.5" ></text>
</g>
<g >
<title>Dataset::Dataset (237,634,840 samples, 0.05%)</title><rect x="10.0" y="405" width="0.6" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (48,939,053 samples, 0.01%)</title><rect x="1130.2" y="341" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1133.22" y="351.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (184,614,319 samples, 0.04%)</title><rect x="886.3" y="197" width="0.5" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="889.34" y="207.5" ></text>
</g>
</g>
</svg>
